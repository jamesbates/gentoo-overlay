--- a/astropy/io/fits/src/compressionmodule.c	2021-08-24 14:43:04.067326000 +0200
+++ b/astropy/io/fits/src/compressionmodule.c	2022-07-04 22:53:47.285299415 +0200
@@ -710,7 +710,6 @@
                 (0 == strcmp(tmp, "NONE"))) {
             Fptr->quantize_level = NO_QUANTIZE;
         } else if (0 == strcmp(tmp, "SUBTRACTIVE_DITHER_1")) {
-#ifdef CFITSIO_SUPPORTS_SUBTRACTIVE_DITHER_2
             // Added in CFITSIO 3.35, this also changed the name of the
             // quantize_dither struct member to quantize_method
             Fptr->quantize_method = SUBTRACTIVE_DITHER_1;
@@ -735,29 +734,6 @@
             break;
         }
     }
-#else
-            Fptr->quantize_dither = SUBTRACTIVE_DITHER_1;
-        } else {
-            Fptr->quantize_dither = NO_DITHER;
-        }
-    } else {
-        Fptr->quantize_dither = NO_DITHER;
-    }
-
-    if (Fptr->quantize_dither != NO_DITHER) {
-        switch (get_header_int(header, "ZDITHER0", &(Fptr->dither_offset), 0, HDR_NOFLAG)) {
-          case GET_HEADER_FAILED:
-            return;
-          case GET_HEADER_DEFAULT_USED: // ZDITHER0 keyword no found
-            /* TODO: Find out if that's actually working and not invalid... */
-            Fptr->dither_offset = 0;
-            Fptr->request_dither_offset = 0;
-            break;
-          default:
-            break;
-        }
-    }
-#endif
 
     Fptr->compressimg = 1;
     Fptr->maxelem = imcomp_calc_max_elem(Fptr->compress_type,
